
a.out:     file format elf32-i386


Disassembly of section .init:

080483a8 <_init>:
 80483a8:	53                   	push   %ebx
 80483a9:	83 ec 08             	sub    $0x8,%esp
 80483ac:	e8 df 00 00 00       	call   8048490 <__x86.get_pc_thunk.bx>
 80483b1:	81 c3 4f 1c 00 00    	add    $0x1c4f,%ebx
 80483b7:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483bd:	85 c0                	test   %eax,%eax
 80483bf:	74 05                	je     80483c6 <_init+0x1e>
 80483c1:	e8 5a 00 00 00       	call   8048420 <__gmon_start__@plt>
 80483c6:	83 c4 08             	add    $0x8,%esp
 80483c9:	5b                   	pop    %ebx
 80483ca:	c3                   	ret    

Disassembly of section .plt:

080483d0 <printf@plt-0x10>:
 80483d0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483d6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483dc:	00 00                	add    %al,(%eax)
	...

080483e0 <printf@plt>:
 80483e0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483e6:	68 00 00 00 00       	push   $0x0
 80483eb:	e9 e0 ff ff ff       	jmp    80483d0 <_init+0x28>

080483f0 <fflush@plt>:
 80483f0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483f6:	68 08 00 00 00       	push   $0x8
 80483fb:	e9 d0 ff ff ff       	jmp    80483d0 <_init+0x28>

08048400 <_IO_getc@plt>:
 8048400:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048406:	68 10 00 00 00       	push   $0x10
 804840b:	e9 c0 ff ff ff       	jmp    80483d0 <_init+0x28>

08048410 <malloc@plt>:
 8048410:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048416:	68 18 00 00 00       	push   $0x18
 804841b:	e9 b0 ff ff ff       	jmp    80483d0 <_init+0x28>

08048420 <__gmon_start__@plt>:
 8048420:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048426:	68 20 00 00 00       	push   $0x20
 804842b:	e9 a0 ff ff ff       	jmp    80483d0 <_init+0x28>

08048430 <exit@plt>:
 8048430:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048436:	68 28 00 00 00       	push   $0x28
 804843b:	e9 90 ff ff ff       	jmp    80483d0 <_init+0x28>

08048440 <__libc_start_main@plt>:
 8048440:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048446:	68 30 00 00 00       	push   $0x30
 804844b:	e9 80 ff ff ff       	jmp    80483d0 <_init+0x28>

08048450 <putchar@plt>:
 8048450:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048456:	68 38 00 00 00       	push   $0x38
 804845b:	e9 70 ff ff ff       	jmp    80483d0 <_init+0x28>

Disassembly of section .text:

08048460 <_start>:
 8048460:	31 ed                	xor    %ebp,%ebp
 8048462:	5e                   	pop    %esi
 8048463:	89 e1                	mov    %esp,%ecx
 8048465:	83 e4 f0             	and    $0xfffffff0,%esp
 8048468:	50                   	push   %eax
 8048469:	54                   	push   %esp
 804846a:	52                   	push   %edx
 804846b:	68 10 8a 04 08       	push   $0x8048a10
 8048470:	68 a0 89 04 08       	push   $0x80489a0
 8048475:	51                   	push   %ecx
 8048476:	56                   	push   %esi
 8048477:	68 2a 87 04 08       	push   $0x804872a
 804847c:	e8 bf ff ff ff       	call   8048440 <__libc_start_main@plt>
 8048481:	f4                   	hlt    
 8048482:	66 90                	xchg   %ax,%ax
 8048484:	66 90                	xchg   %ax,%ax
 8048486:	66 90                	xchg   %ax,%ax
 8048488:	66 90                	xchg   %ax,%ax
 804848a:	66 90                	xchg   %ax,%ax
 804848c:	66 90                	xchg   %ax,%ax
 804848e:	66 90                	xchg   %ax,%ax

08048490 <__x86.get_pc_thunk.bx>:
 8048490:	8b 1c 24             	mov    (%esp),%ebx
 8048493:	c3                   	ret    
 8048494:	66 90                	xchg   %ax,%ax
 8048496:	66 90                	xchg   %ax,%ax
 8048498:	66 90                	xchg   %ax,%ax
 804849a:	66 90                	xchg   %ax,%ax
 804849c:	66 90                	xchg   %ax,%ax
 804849e:	66 90                	xchg   %ax,%ax

080484a0 <deregister_tm_clones>:
 80484a0:	b8 37 a0 04 08       	mov    $0x804a037,%eax
 80484a5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484aa:	83 f8 06             	cmp    $0x6,%eax
 80484ad:	77 01                	ja     80484b0 <deregister_tm_clones+0x10>
 80484af:	c3                   	ret    
 80484b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80484b5:	85 c0                	test   %eax,%eax
 80484b7:	74 f6                	je     80484af <deregister_tm_clones+0xf>
 80484b9:	55                   	push   %ebp
 80484ba:	89 e5                	mov    %esp,%ebp
 80484bc:	83 ec 18             	sub    $0x18,%esp
 80484bf:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 80484c6:	ff d0                	call   *%eax
 80484c8:	c9                   	leave  
 80484c9:	c3                   	ret    
 80484ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080484d0 <register_tm_clones>:
 80484d0:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 80484d5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484da:	c1 f8 02             	sar    $0x2,%eax
 80484dd:	89 c2                	mov    %eax,%edx
 80484df:	c1 ea 1f             	shr    $0x1f,%edx
 80484e2:	01 d0                	add    %edx,%eax
 80484e4:	d1 f8                	sar    %eax
 80484e6:	75 01                	jne    80484e9 <register_tm_clones+0x19>
 80484e8:	c3                   	ret    
 80484e9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484ee:	85 d2                	test   %edx,%edx
 80484f0:	74 f6                	je     80484e8 <register_tm_clones+0x18>
 80484f2:	55                   	push   %ebp
 80484f3:	89 e5                	mov    %esp,%ebp
 80484f5:	83 ec 18             	sub    $0x18,%esp
 80484f8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484fc:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048503:	ff d2                	call   *%edx
 8048505:	c9                   	leave  
 8048506:	c3                   	ret    
 8048507:	89 f6                	mov    %esi,%esi
 8048509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048510 <__do_global_dtors_aux>:
 8048510:	80 3d 64 a0 04 08 00 	cmpb   $0x0,0x804a064
 8048517:	75 13                	jne    804852c <__do_global_dtors_aux+0x1c>
 8048519:	55                   	push   %ebp
 804851a:	89 e5                	mov    %esp,%ebp
 804851c:	83 ec 08             	sub    $0x8,%esp
 804851f:	e8 7c ff ff ff       	call   80484a0 <deregister_tm_clones>
 8048524:	c6 05 64 a0 04 08 01 	movb   $0x1,0x804a064
 804852b:	c9                   	leave  
 804852c:	f3 c3                	repz ret 
 804852e:	66 90                	xchg   %ax,%ax

08048530 <frame_dummy>:
 8048530:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048535:	85 c0                	test   %eax,%eax
 8048537:	74 1f                	je     8048558 <frame_dummy+0x28>
 8048539:	b8 00 00 00 00       	mov    $0x0,%eax
 804853e:	85 c0                	test   %eax,%eax
 8048540:	74 16                	je     8048558 <frame_dummy+0x28>
 8048542:	55                   	push   %ebp
 8048543:	89 e5                	mov    %esp,%ebp
 8048545:	83 ec 18             	sub    $0x18,%esp
 8048548:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804854f:	ff d0                	call   *%eax
 8048551:	c9                   	leave  
 8048552:	e9 79 ff ff ff       	jmp    80484d0 <register_tm_clones>
 8048557:	90                   	nop
 8048558:	e9 73 ff ff ff       	jmp    80484d0 <register_tm_clones>

0804855d <tigermain>:
 804855d:	55                   	push   %ebp
 804855e:	89 e5                	mov    %esp,%ebp
 8048560:	83 ec 0c             	sub    $0xc,%esp
 8048563:	89 d8                	mov    %ebx,%eax
 8048565:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048568:	89 f6                	mov    %esi,%esi
 804856a:	89 f8                	mov    %edi,%eax
 804856c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804856f:	89 e8                	mov    %ebp,%eax
 8048571:	83 c0 fc             	add    $0xfffffffc,%eax
 8048574:	89 c7                	mov    %eax,%edi
 8048576:	e8 e9 03 00 00       	call   8048964 <__wrap_getchar>
 804857b:	89 c3                	mov    %eax,%ebx
 804857d:	89 d8                	mov    %ebx,%eax
 804857f:	89 07                	mov    %eax,(%edi)
 8048581:	b8 30 8a 04 08       	mov    $0x8048a30,%eax
 8048586:	50                   	push   %eax
 8048587:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804858a:	50                   	push   %eax
 804858b:	e8 c2 00 00 00       	call   8048652 <stringEqual>
 8048590:	89 c3                	mov    %eax,%ebx
 8048592:	89 db                	mov    %ebx,%ebx
 8048594:	b8 00 00 00 00       	mov    $0x0,%eax
 8048599:	39 c3                	cmp    %eax,%ebx
 804859b:	75 15                	jne    80485b2 <L2>

0804859d <L3>:
 804859d:	b8 00 00 00 00       	mov    $0x0,%eax
 80485a2:	8b 5d f8             	mov    -0x8(%ebp),%ebx
 80485a5:	89 db                	mov    %ebx,%ebx
 80485a7:	89 f6                	mov    %esi,%esi
 80485a9:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 80485ac:	89 df                	mov    %ebx,%edi
 80485ae:	89 c0                	mov    %eax,%eax
 80485b0:	eb 0f                	jmp    80485c1 <L5>

080485b2 <L2>:
 80485b2:	b8 6f 00 00 00       	mov    $0x6f,%eax
 80485b7:	50                   	push   %eax
 80485b8:	e8 3d 01 00 00       	call   80486fa <printi>
 80485bd:	89 c3                	mov    %eax,%ebx
 80485bf:	eb dc                	jmp    804859d <L3>

080485c1 <L5>:
 80485c1:	89 ec                	mov    %ebp,%esp
 80485c3:	5d                   	pop    %ebp
 80485c4:	c3                   	ret    

080485c5 <initArray>:
 80485c5:	55                   	push   %ebp
 80485c6:	89 e5                	mov    %esp,%ebp
 80485c8:	83 ec 28             	sub    $0x28,%esp
 80485cb:	8b 45 08             	mov    0x8(%ebp),%eax
 80485ce:	c1 e0 02             	shl    $0x2,%eax
 80485d1:	89 04 24             	mov    %eax,(%esp)
 80485d4:	e8 37 fe ff ff       	call   8048410 <malloc@plt>
 80485d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80485dc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80485e3:	eb 18                	jmp    80485fd <initArray+0x38>
 80485e5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80485e8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80485ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80485f2:	01 c2                	add    %eax,%edx
 80485f4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80485f7:	89 02                	mov    %eax,(%edx)
 80485f9:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 80485fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048600:	3b 45 08             	cmp    0x8(%ebp),%eax
 8048603:	7c e0                	jl     80485e5 <initArray+0x20>
 8048605:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048608:	c9                   	leave  
 8048609:	c3                   	ret    

0804860a <allocRecord>:
 804860a:	55                   	push   %ebp
 804860b:	89 e5                	mov    %esp,%ebp
 804860d:	83 ec 28             	sub    $0x28,%esp
 8048610:	8b 45 08             	mov    0x8(%ebp),%eax
 8048613:	89 04 24             	mov    %eax,(%esp)
 8048616:	e8 f5 fd ff ff       	call   8048410 <malloc@plt>
 804861b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804861e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048621:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048624:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804862b:	eb 18                	jmp    8048645 <allocRecord+0x3b>
 804862d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048630:	8d 50 04             	lea    0x4(%eax),%edx
 8048633:	89 55 f0             	mov    %edx,-0x10(%ebp)
 8048636:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804863c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804863f:	83 c0 04             	add    $0x4,%eax
 8048642:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8048645:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048648:	3b 45 08             	cmp    0x8(%ebp),%eax
 804864b:	7c e0                	jl     804862d <allocRecord+0x23>
 804864d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048650:	c9                   	leave  
 8048651:	c3                   	ret    

08048652 <stringEqual>:
 8048652:	55                   	push   %ebp
 8048653:	89 e5                	mov    %esp,%ebp
 8048655:	83 ec 10             	sub    $0x10,%esp
 8048658:	8b 45 08             	mov    0x8(%ebp),%eax
 804865b:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804865e:	75 07                	jne    8048667 <stringEqual+0x15>
 8048660:	b8 01 00 00 00       	mov    $0x1,%eax
 8048665:	eb 54                	jmp    80486bb <stringEqual+0x69>
 8048667:	8b 45 08             	mov    0x8(%ebp),%eax
 804866a:	8b 10                	mov    (%eax),%edx
 804866c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804866f:	8b 00                	mov    (%eax),%eax
 8048671:	39 c2                	cmp    %eax,%edx
 8048673:	74 07                	je     804867c <stringEqual+0x2a>
 8048675:	b8 00 00 00 00       	mov    $0x0,%eax
 804867a:	eb 3f                	jmp    80486bb <stringEqual+0x69>
 804867c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8048683:	eb 27                	jmp    80486ac <stringEqual+0x5a>
 8048685:	8b 55 08             	mov    0x8(%ebp),%edx
 8048688:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804868b:	01 d0                	add    %edx,%eax
 804868d:	0f b6 50 04          	movzbl 0x4(%eax),%edx
 8048691:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 8048694:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048697:	01 c8                	add    %ecx,%eax
 8048699:	0f b6 40 04          	movzbl 0x4(%eax),%eax
 804869d:	38 c2                	cmp    %al,%dl
 804869f:	74 07                	je     80486a8 <stringEqual+0x56>
 80486a1:	b8 00 00 00 00       	mov    $0x0,%eax
 80486a6:	eb 13                	jmp    80486bb <stringEqual+0x69>
 80486a8:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 80486ac:	8b 45 08             	mov    0x8(%ebp),%eax
 80486af:	8b 00                	mov    (%eax),%eax
 80486b1:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 80486b4:	7f cf                	jg     8048685 <stringEqual+0x33>
 80486b6:	b8 01 00 00 00       	mov    $0x1,%eax
 80486bb:	c9                   	leave  
 80486bc:	c3                   	ret    

080486bd <print>:
 80486bd:	55                   	push   %ebp
 80486be:	89 e5                	mov    %esp,%ebp
 80486c0:	83 ec 28             	sub    $0x28,%esp
 80486c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80486c6:	83 c0 04             	add    $0x4,%eax
 80486c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80486cc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80486d3:	eb 19                	jmp    80486ee <print+0x31>
 80486d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80486d8:	0f b6 00             	movzbl (%eax),%eax
 80486db:	0f b6 c0             	movzbl %al,%eax
 80486de:	89 04 24             	mov    %eax,(%esp)
 80486e1:	e8 6a fd ff ff       	call   8048450 <putchar@plt>
 80486e6:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 80486ea:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 80486ee:	8b 45 08             	mov    0x8(%ebp),%eax
 80486f1:	8b 00                	mov    (%eax),%eax
 80486f3:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 80486f6:	7f dd                	jg     80486d5 <print+0x18>
 80486f8:	c9                   	leave  
 80486f9:	c3                   	ret    

080486fa <printi>:
 80486fa:	55                   	push   %ebp
 80486fb:	89 e5                	mov    %esp,%ebp
 80486fd:	83 ec 18             	sub    $0x18,%esp
 8048700:	8b 45 08             	mov    0x8(%ebp),%eax
 8048703:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048707:	c7 04 24 38 8a 04 08 	movl   $0x8048a38,(%esp)
 804870e:	e8 cd fc ff ff       	call   80483e0 <printf@plt>
 8048713:	c9                   	leave  
 8048714:	c3                   	ret    

08048715 <flush>:
 8048715:	55                   	push   %ebp
 8048716:	89 e5                	mov    %esp,%ebp
 8048718:	83 ec 18             	sub    $0x18,%esp
 804871b:	a1 60 a0 04 08       	mov    0x804a060,%eax
 8048720:	89 04 24             	mov    %eax,(%esp)
 8048723:	e8 c8 fc ff ff       	call   80483f0 <fflush@plt>
 8048728:	c9                   	leave  
 8048729:	c3                   	ret    

0804872a <main>:
 804872a:	55                   	push   %ebp
 804872b:	89 e5                	mov    %esp,%ebp
 804872d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048730:	83 ec 20             	sub    $0x20,%esp
 8048733:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 804873a:	00 
 804873b:	eb 25                	jmp    8048762 <main+0x38>
 804873d:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048741:	c7 04 c5 80 a0 04 08 	movl   $0x1,0x804a080(,%eax,8)
 8048748:	01 00 00 00 
 804874c:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048750:	89 c2                	mov    %eax,%edx
 8048752:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048756:	88 14 c5 84 a0 04 08 	mov    %dl,0x804a084(,%eax,8)
 804875d:	83 44 24 1c 01       	addl   $0x1,0x1c(%esp)
 8048762:	81 7c 24 1c ff 00 00 	cmpl   $0xff,0x1c(%esp)
 8048769:	00 
 804876a:	7e d1                	jle    804873d <main+0x13>
 804876c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048773:	e8 e5 fd ff ff       	call   804855d <tigermain>
 8048778:	c9                   	leave  
 8048779:	c3                   	ret    

0804877a <ord>:
 804877a:	55                   	push   %ebp
 804877b:	89 e5                	mov    %esp,%ebp
 804877d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048780:	8b 00                	mov    (%eax),%eax
 8048782:	85 c0                	test   %eax,%eax
 8048784:	75 07                	jne    804878d <ord+0x13>
 8048786:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804878b:	eb 0a                	jmp    8048797 <ord+0x1d>
 804878d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048790:	0f b6 40 04          	movzbl 0x4(%eax),%eax
 8048794:	0f b6 c0             	movzbl %al,%eax
 8048797:	5d                   	pop    %ebp
 8048798:	c3                   	ret    

08048799 <chr>:
 8048799:	55                   	push   %ebp
 804879a:	89 e5                	mov    %esp,%ebp
 804879c:	83 ec 18             	sub    $0x18,%esp
 804879f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 80487a3:	78 09                	js     80487ae <chr+0x15>
 80487a5:	81 7d 08 ff 00 00 00 	cmpl   $0xff,0x8(%ebp)
 80487ac:	7e 1f                	jle    80487cd <chr+0x34>
 80487ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80487b1:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487b5:	c7 04 24 3b 8a 04 08 	movl   $0x8048a3b,(%esp)
 80487bc:	e8 1f fc ff ff       	call   80483e0 <printf@plt>
 80487c1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80487c8:	e8 63 fc ff ff       	call   8048430 <exit@plt>
 80487cd:	8b 45 08             	mov    0x8(%ebp),%eax
 80487d0:	c1 e0 03             	shl    $0x3,%eax
 80487d3:	05 80 a0 04 08       	add    $0x804a080,%eax
 80487d8:	c9                   	leave  
 80487d9:	c3                   	ret    

080487da <size>:
 80487da:	55                   	push   %ebp
 80487db:	89 e5                	mov    %esp,%ebp
 80487dd:	8b 45 08             	mov    0x8(%ebp),%eax
 80487e0:	8b 00                	mov    (%eax),%eax
 80487e2:	5d                   	pop    %ebp
 80487e3:	c3                   	ret    

080487e4 <substring>:
 80487e4:	55                   	push   %ebp
 80487e5:	89 e5                	mov    %esp,%ebp
 80487e7:	83 ec 28             	sub    $0x28,%esp
 80487ea:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 80487ee:	78 11                	js     8048801 <substring+0x1d>
 80487f0:	8b 45 10             	mov    0x10(%ebp),%eax
 80487f3:	8b 55 0c             	mov    0xc(%ebp),%edx
 80487f6:	01 c2                	add    %eax,%edx
 80487f8:	8b 45 08             	mov    0x8(%ebp),%eax
 80487fb:	8b 00                	mov    (%eax),%eax
 80487fd:	39 c2                	cmp    %eax,%edx
 80487ff:	7e 2f                	jle    8048830 <substring+0x4c>
 8048801:	8b 45 08             	mov    0x8(%ebp),%eax
 8048804:	8b 00                	mov    (%eax),%eax
 8048806:	8b 55 10             	mov    0x10(%ebp),%edx
 8048809:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804880d:	8b 55 0c             	mov    0xc(%ebp),%edx
 8048810:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048814:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048818:	c7 04 24 54 8a 04 08 	movl   $0x8048a54,(%esp)
 804881f:	e8 bc fb ff ff       	call   80483e0 <printf@plt>
 8048824:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804882b:	e8 00 fc ff ff       	call   8048430 <exit@plt>
 8048830:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
 8048834:	75 19                	jne    804884f <substring+0x6b>
 8048836:	8b 55 08             	mov    0x8(%ebp),%edx
 8048839:	8b 45 0c             	mov    0xc(%ebp),%eax
 804883c:	01 d0                	add    %edx,%eax
 804883e:	0f b6 40 04          	movzbl 0x4(%eax),%eax
 8048842:	0f b6 c0             	movzbl %al,%eax
 8048845:	c1 e0 03             	shl    $0x3,%eax
 8048848:	05 80 a0 04 08       	add    $0x804a080,%eax
 804884d:	eb 4c                	jmp    804889b <substring+0xb7>
 804884f:	8b 45 10             	mov    0x10(%ebp),%eax
 8048852:	83 c0 04             	add    $0x4,%eax
 8048855:	89 04 24             	mov    %eax,(%esp)
 8048858:	e8 b3 fb ff ff       	call   8048410 <malloc@plt>
 804885d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048860:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048863:	8b 55 10             	mov    0x10(%ebp),%edx
 8048866:	89 10                	mov    %edx,(%eax)
 8048868:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804886f:	eb 1f                	jmp    8048890 <substring+0xac>
 8048871:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048874:	8b 55 0c             	mov    0xc(%ebp),%edx
 8048877:	01 c2                	add    %eax,%edx
 8048879:	8b 45 08             	mov    0x8(%ebp),%eax
 804887c:	0f b6 44 10 04       	movzbl 0x4(%eax,%edx,1),%eax
 8048881:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048884:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048887:	01 ca                	add    %ecx,%edx
 8048889:	88 42 04             	mov    %al,0x4(%edx)
 804888c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8048890:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048893:	3b 45 10             	cmp    0x10(%ebp),%eax
 8048896:	7c d9                	jl     8048871 <substring+0x8d>
 8048898:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804889b:	c9                   	leave  
 804889c:	c3                   	ret    

0804889d <concat>:
 804889d:	55                   	push   %ebp
 804889e:	89 e5                	mov    %esp,%ebp
 80488a0:	83 ec 28             	sub    $0x28,%esp
 80488a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80488a6:	8b 00                	mov    (%eax),%eax
 80488a8:	85 c0                	test   %eax,%eax
 80488aa:	75 08                	jne    80488b4 <concat+0x17>
 80488ac:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488af:	e9 9f 00 00 00       	jmp    8048953 <concat+0xb6>
 80488b4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488b7:	8b 00                	mov    (%eax),%eax
 80488b9:	85 c0                	test   %eax,%eax
 80488bb:	75 08                	jne    80488c5 <concat+0x28>
 80488bd:	8b 45 08             	mov    0x8(%ebp),%eax
 80488c0:	e9 8e 00 00 00       	jmp    8048953 <concat+0xb6>
 80488c5:	8b 45 08             	mov    0x8(%ebp),%eax
 80488c8:	8b 10                	mov    (%eax),%edx
 80488ca:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488cd:	8b 00                	mov    (%eax),%eax
 80488cf:	01 d0                	add    %edx,%eax
 80488d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80488d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80488d7:	83 c0 04             	add    $0x4,%eax
 80488da:	89 04 24             	mov    %eax,(%esp)
 80488dd:	e8 2e fb ff ff       	call   8048410 <malloc@plt>
 80488e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80488e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80488e8:	8b 55 f0             	mov    -0x10(%ebp),%edx
 80488eb:	89 10                	mov    %edx,(%eax)
 80488ed:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 80488f4:	eb 1b                	jmp    8048911 <concat+0x74>
 80488f6:	8b 55 08             	mov    0x8(%ebp),%edx
 80488f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80488fc:	01 d0                	add    %edx,%eax
 80488fe:	0f b6 40 04          	movzbl 0x4(%eax),%eax
 8048902:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048905:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048908:	01 ca                	add    %ecx,%edx
 804890a:	88 42 04             	mov    %al,0x4(%edx)
 804890d:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 8048911:	8b 45 08             	mov    0x8(%ebp),%eax
 8048914:	8b 00                	mov    (%eax),%eax
 8048916:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 8048919:	7f db                	jg     80488f6 <concat+0x59>
 804891b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8048922:	eb 22                	jmp    8048946 <concat+0xa9>
 8048924:	8b 45 08             	mov    0x8(%ebp),%eax
 8048927:	8b 10                	mov    (%eax),%edx
 8048929:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804892c:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804892f:	8b 55 0c             	mov    0xc(%ebp),%edx
 8048932:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048935:	01 d0                	add    %edx,%eax
 8048937:	0f b6 50 04          	movzbl 0x4(%eax),%edx
 804893b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804893e:	88 54 08 04          	mov    %dl,0x4(%eax,%ecx,1)
 8048942:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 8048946:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048949:	8b 00                	mov    (%eax),%eax
 804894b:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 804894e:	7f d4                	jg     8048924 <concat+0x87>
 8048950:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048953:	c9                   	leave  
 8048954:	c3                   	ret    

08048955 <not>:
 8048955:	55                   	push   %ebp
 8048956:	89 e5                	mov    %esp,%ebp
 8048958:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804895c:	0f 94 c0             	sete   %al
 804895f:	0f b6 c0             	movzbl %al,%eax
 8048962:	5d                   	pop    %ebp
 8048963:	c3                   	ret    

08048964 <__wrap_getchar>:
 8048964:	55                   	push   %ebp
 8048965:	89 e5                	mov    %esp,%ebp
 8048967:	83 ec 28             	sub    $0x28,%esp
 804896a:	a1 40 a0 04 08       	mov    0x804a040,%eax
 804896f:	89 04 24             	mov    %eax,(%esp)
 8048972:	e8 89 fa ff ff       	call   8048400 <_IO_getc@plt>
 8048977:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804897a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 804897e:	75 07                	jne    8048987 <__wrap_getchar+0x23>
 8048980:	b8 68 a0 04 08       	mov    $0x804a068,%eax
 8048985:	eb 0b                	jmp    8048992 <__wrap_getchar+0x2e>
 8048987:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804898a:	c1 e0 03             	shl    $0x3,%eax
 804898d:	05 80 a0 04 08       	add    $0x804a080,%eax
 8048992:	c9                   	leave  
 8048993:	c3                   	ret    
 8048994:	66 90                	xchg   %ax,%ax
 8048996:	66 90                	xchg   %ax,%ax
 8048998:	66 90                	xchg   %ax,%ax
 804899a:	66 90                	xchg   %ax,%ax
 804899c:	66 90                	xchg   %ax,%ax
 804899e:	66 90                	xchg   %ax,%ax

080489a0 <__libc_csu_init>:
 80489a0:	55                   	push   %ebp
 80489a1:	57                   	push   %edi
 80489a2:	31 ff                	xor    %edi,%edi
 80489a4:	56                   	push   %esi
 80489a5:	53                   	push   %ebx
 80489a6:	e8 e5 fa ff ff       	call   8048490 <__x86.get_pc_thunk.bx>
 80489ab:	81 c3 55 16 00 00    	add    $0x1655,%ebx
 80489b1:	83 ec 1c             	sub    $0x1c,%esp
 80489b4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80489b8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80489be:	e8 e5 f9 ff ff       	call   80483a8 <_init>
 80489c3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80489c9:	29 c6                	sub    %eax,%esi
 80489cb:	c1 fe 02             	sar    $0x2,%esi
 80489ce:	85 f6                	test   %esi,%esi
 80489d0:	74 27                	je     80489f9 <__libc_csu_init+0x59>
 80489d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80489d8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80489dc:	89 2c 24             	mov    %ebp,(%esp)
 80489df:	89 44 24 08          	mov    %eax,0x8(%esp)
 80489e3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80489e7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80489eb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80489f2:	83 c7 01             	add    $0x1,%edi
 80489f5:	39 f7                	cmp    %esi,%edi
 80489f7:	75 df                	jne    80489d8 <__libc_csu_init+0x38>
 80489f9:	83 c4 1c             	add    $0x1c,%esp
 80489fc:	5b                   	pop    %ebx
 80489fd:	5e                   	pop    %esi
 80489fe:	5f                   	pop    %edi
 80489ff:	5d                   	pop    %ebp
 8048a00:	c3                   	ret    
 8048a01:	eb 0d                	jmp    8048a10 <__libc_csu_fini>
 8048a03:	90                   	nop
 8048a04:	90                   	nop
 8048a05:	90                   	nop
 8048a06:	90                   	nop
 8048a07:	90                   	nop
 8048a08:	90                   	nop
 8048a09:	90                   	nop
 8048a0a:	90                   	nop
 8048a0b:	90                   	nop
 8048a0c:	90                   	nop
 8048a0d:	90                   	nop
 8048a0e:	90                   	nop
 8048a0f:	90                   	nop

08048a10 <__libc_csu_fini>:
 8048a10:	f3 c3                	repz ret 

Disassembly of section .fini:

08048a14 <_fini>:
 8048a14:	53                   	push   %ebx
 8048a15:	83 ec 08             	sub    $0x8,%esp
 8048a18:	e8 73 fa ff ff       	call   8048490 <__x86.get_pc_thunk.bx>
 8048a1d:	81 c3 e3 15 00 00    	add    $0x15e3,%ebx
 8048a23:	83 c4 08             	add    $0x8,%esp
 8048a26:	5b                   	pop    %ebx
 8048a27:	c3                   	ret    
